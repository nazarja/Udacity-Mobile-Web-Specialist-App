var dbPromise;!function(){function e(e){return new Promise(function(t,n){e.onsuccess=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function t(t,n,r){var o,s=new Promise(function(s,i){e(o=t[n].apply(t,r)).then(s,i)});return s.request=o,s}function n(e,t,n){n.forEach(function(n){Object.defineProperty(e.prototype,n,{get:function(){return this[t][n]},set:function(e){this[t][n]=e}})})}function r(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return t(this[n],o,arguments)})})}function o(e,t,n,r){r.forEach(function(r){r in n.prototype&&(e.prototype[r]=function(){return this[t][r].apply(this[t],arguments)})})}function s(e,n,r,o){o.forEach(function(o){o in r.prototype&&(e.prototype[o]=function(){return e=this[n],(r=t(e,o,arguments)).then(function(e){if(e)return new a(e,r.request)});var e,r})})}function i(e){this._index=e}function a(e,t){this._cursor=e,this._request=t}function c(e){this._store=e}function l(e){this._tx=e,this.complete=new Promise(function(t,n){e.oncomplete=function(){t()},e.onerror=function(){n(e.error)},e.onabort=function(){n(e.error)}})}function u(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new l(n)}function d(e){this._db=e}n(i,"_index",["name","keyPath","multiEntry","unique"]),r(i,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),s(i,"_index",IDBIndex,["openCursor","openKeyCursor"]),n(a,"_cursor",["direction","key","primaryKey","value"]),r(a,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(t){t in IDBCursor.prototype&&(a.prototype[t]=function(){var n=this,r=arguments;return Promise.resolve().then(function(){return n._cursor[t].apply(n._cursor,r),e(n._request).then(function(e){if(e)return new a(e,n._request)})})})}),c.prototype.createIndex=function(){return new i(this._store.createIndex.apply(this._store,arguments))},c.prototype.index=function(){return new i(this._store.index.apply(this._store,arguments))},n(c,"_store",["name","keyPath","indexNames","autoIncrement"]),r(c,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),s(c,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),o(c,"_store",IDBObjectStore,["deleteIndex"]),l.prototype.objectStore=function(){return new c(this._tx.objectStore.apply(this._tx,arguments))},n(l,"_tx",["objectStoreNames","mode"]),o(l,"_tx",IDBTransaction,["abort"]),u.prototype.createObjectStore=function(){return new c(this._db.createObjectStore.apply(this._db,arguments))},n(u,"_db",["name","version","objectStoreNames"]),o(u,"_db",IDBDatabase,["deleteObjectStore","close"]),d.prototype.transaction=function(){return new l(this._db.transaction.apply(this._db,arguments))},n(d,"_db",["name","version","objectStoreNames"]),o(d,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(e){[c,i].forEach(function(t){e in t.prototype&&(t.prototype[e.replace("open","iterate")]=function(){var t,n=(t=arguments,Array.prototype.slice.call(t)),r=n[n.length-1],o=this._store||this._index,s=o[e].apply(o,n.slice(0,-1));s.onsuccess=function(){r(s.result)}})})}),[i,c].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,t){var n=this,r=[];return new Promise(function(o){n.iterateCursor(e,function(e){e?(r.push(e.value),void 0===t||r.length!=t?e.continue():o(r)):o(r)})})})});var p={open:function(e,n,r){var o=t(indexedDB,"open",[e,n]),s=o.request;return s.onupgradeneeded=function(e){r&&r(new u(s.result,e.oldVersion,s.transaction))},o.then(function(e){return new d(e)})},delete:function(e){return t(indexedDB,"deleteDatabase",[e])}};"undefined"!=typeof module?(module.exports=p,module.exports.default=module.exports):self.idb=p}();class DBHelper{static checkDatabase(){return(dbPromise=idb.open("restaurants-db",1,e=>{e.createObjectStore("restaurants-store",{keyPath:"id"}),e.createObjectStore("sync-reviews"),e.createObjectStore("sync-favourites")})).then(e=>{if(e)return dbPromise.then(e=>e.transaction("restaurants-store").objectStore("restaurants-store").getAll())})}static fetchRestaurants(e){this.checkDatabase().then(t=>{if(0!=t.length)return e(null,t);fetch("http://localhost:1337/restaurants").then(e=>e.json()).then(t=>Promise.all(t.map(e=>fetch(`http://localhost:1337/reviews/?restaurant_id=${e.id}`).then(e=>e.json()).then(n=>{e.reviews=n,dbPromise.then(e=>{let n=e.transaction("restaurants-store","readwrite").objectStore("restaurants-store");t.forEach(e=>{n.put(e)})})}))).then(n=>e(null,t))).catch(t=>{dbPromise.then(t=>{return t.transaction("restaurants-store").objectStore("restaurants-store").getAll().then(t=>e(null,t)).catch(t=>e(t,null))})})})}static fetchRestaurantById(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.find(t=>t.id==e);n?t(null,n):t("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.cuisine_type==e);t(null,n)}})}static fetchRestaurantByNeighborhood(e,t){DBHelper.fetchRestaurants((n,r)=>{if(n)t(n,null);else{const n=r.filter(t=>t.neighborhood==e);t(null,n)}})}static fetchRestaurantByCuisineAndNeighborhood(e,t,n){DBHelper.fetchRestaurants((r,o)=>{if(r)n(r,null);else{let r=o;"all"!=e&&(r=r.filter(t=>t.cuisine_type==e)),"all"!=t&&(r=r.filter(e=>e.neighborhood==t)),n(null,r)}})}static fetchNeighborhoods(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].neighborhood),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static fetchCuisines(e){DBHelper.fetchRestaurants((t,n)=>{if(t)e(t,null);else{const t=n.map((e,t)=>n[t].cuisine_type),r=t.filter((e,n)=>t.indexOf(e)==n);e(null,r)}})}static urlForRestaurant(e){return`./restaurant.html?id=${e.id}`}static imageUrlForRestaurant(e){return`./img/${e.id}.webp`}static mapMarkerForRestaurant(e,t){return new google.maps.Marker({position:e.latlng,title:e.name,url:DBHelper.urlForRestaurant(e),map:t,animation:google.maps.Animation.DROP})}static lazyload(){let e=[].slice.call(document.querySelectorAll(".lazyload"));if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype){let t=new IntersectionObserver(function(e,n){e.forEach(function(e){if(e.isIntersecting){let n=e.target;n.src=n.dataset.srcset,n.srcset=n.dataset.srcset,n.classList.remove("lazyload"),t.unobserve(n)}})});e.forEach(function(e){t.observe(e)})}}}let restaurants,neighborhoods,cuisines;var map,markers=[];function mapLocation(){self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),addMarkersToMap()}function markAsFavourite(){let e=parseInt(this.dataset.id);function t(t){dbPromise.then(n=>{return n.transaction("restaurants-store","readwrite").objectStore("restaurants-store").get(e).then(e=>{e.is_favorite=t;let r=n.transaction("restaurants-store","readwrite").objectStore("restaurants-store");return r.put(e),r.complete})}),dbPromise.then(n=>{let r=n.transaction("sync-favourites","readwrite").objectStore("sync-favourites");return r.put({id:e,is_favorite:t},e),r.complete})}this.checked?(this.nextElementSibling.innerHTML=" unmark as favourite",t(!0)):(this.nextElementSibling.innerHTML=" mark as favourite",t(!1)),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(e=>e.sync.register("sync-favourites"))}document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const n=document.createElement("option");n.innerHTML=e,n.value=e,t.append(n)})}),window.initMap=(()=>{let e=document.querySelector("#map-container"),t=document.createElement("div");t.id="mapImage",t.style.opacity=1,t.style.backgroundImage='url("./img/gmaps.webp")',e.append(t);let n=document.createElement("div");n.id="interactiveMapButton",n.style.opacity=1;let r=document.createElement("p");r.id="interactiveMapLink",r.innerText="Click me for a Live Map",r.setAttribute("aria-label","Click to get live map of the restaurants"),r.setAttribute("role","application"),r.addEventListener("click",()=>{mapLocation();let e=setInterval(()=>{n.style.opacity-=.1,t.style.opacity-=.1,n.style.opacity<=0&&(n.style.display="none",clearInterval(e))},100)}),n.append(r),t.append(n),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),n=e.selectedIndex,r=t.selectedIndex,o=e[n].value,s=t[r].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(o,s,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),DBHelper.lazyload(),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),n=document.createElement("img");n.className="restaurant-img lazyload",n.setAttribute("data-srcset",DBHelper.imageUrlForRestaurant(e)),n.alt="Restaurant image "+e.name,t.append(n);const r=document.createElement("div");r.className="favourite-container";const o=document.createElement("input");o.type="checkbox",o.className="checkbox",o.name=e.id,o.setAttribute("aria-label",`Mark ${e.name} as Favourite`),o.setAttribute("data-id",e.id),o.addEventListener("click",markAsFavourite),r.append(o);const s=document.createElement("label");s.className="favouriteLabel",s.for="markFavourite",s.innerText=" mark as favourite","true"==e.is_favorite&&(s.innerText=" unmark as favourite",o.checked="checked"),r.append(s),t.append(r);const i=document.createElement("h2");i.innerHTML=e.name,t.append(i);const a=document.createElement("p");a.innerHTML=e.neighborhood,t.append(a);const c=document.createElement("p");c.innerHTML=e.address,t.append(c);const l=document.createElement("a");return l.innerHTML="View Details",l.href=DBHelper.urlForRestaurant(e),l.setAttribute("aria-label",e.name+" View Details"),t.append(l),t}),addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});const checkbox=document.querySelector("#checkbox"),filterOptions=document.querySelector("#filter-options");function mobileMenu(){checkbox.checked?(filterOptions.style.height="160px",filterOptions.style.visibility="visible"):(filterOptions.style.height="0px",filterOptions.style.visibility="hidden")}checkbox.addEventListener("change",function(){mobileMenu()}),window.addEventListener("resize",e=>{window.innerWidth>850?(filterOptions.style.height="auto",filterOptions.style.visibility="visible"):mobileMenu()}),window.addEventListener("keyup",e=>{if(9==e.keyCode){document.getElementById("map-container").querySelectorAll("*").forEach(e=>{e.tabIndex="-1","interactiveMapLink"==e.id&&(e.tabIndex="0")})}}),"serviceWorker"in navigator&&window.addEventListener("load",()=>{navigator.serviceWorker.register("./sw.js").then(e=>{console.log("Service Worker Registered!")}).catch(e=>{console.log("Service Worker Not Registered!"+e)})});